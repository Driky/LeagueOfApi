name: Dart CI

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 0 * * 0"

jobs:
  analyze:
    runs-on: ubuntu-latest
    container:
      image:  google/dart:latest
    steps:
      - uses: actions/checkout@v2
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'

  test:
    runs-on: ubuntu-latest
    container:
      image:  google/dart:latest
    steps:
      - uses: actions/checkout@v1
      - name: Install app dependencies
        run: pub get
      - name: Test app
        run: pub run test
#      - name: Generate code coverage
#        run: pub run test_coverage
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v1.0.2
#        with:
#          token: ${{secrets.CODECOV_TOKEN}}
#          file: coverage/lcov.info

  coverage:
    runs-on: ubuntu-latest
    container:
      image:  google/dart:latest
    steps:
      - uses: actions/checkout@v2
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Collect and report coverage
        run: ./tool/code_coverage.sh
      - name: Ls
        run: ls -al
      - name: Ls2
        run: ls -al ./tool
      - name: Ls3
        run: ls -al ./coverage
      - name: Upload coverage
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: coverage/lcov.info
#        uses: coverallsapp/github-action@v1.1.2
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          path-to-lcov: var/lcov.info